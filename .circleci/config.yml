version: 2.1

# Define the orbs we'll use
orbs:
  terraform: circleci/terraform@3.6
  aws-cli: circleci/aws-cli@5.4.0
  platform-team: https://raw.githubusercontent.com/CircleCI-Labs/platform-team-configs/refs/heads/main/orbs/platform-team.yml

jobs:
  configure-cci:
    docker:
      - image: cimg/deploy:2025.01.1
    environment:
      WEBHOOK_BODY: << pipeline.trigger_parameters.webhook.body >>
    steps:
      - checkout
      - platform-team/parse-webhook-payload
      - platform-team/build-terraform-provider-circleci:
          provider_version: "0.0.1"
      - setup-tf-vars-create
      - aws-cli/setup:
          role_arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${AWS_IAM_PREFIX}-role"
          role_session_name: "fe-provider-demo-<< pipeline.number >>"
      - run:
          name: Generate backend config
          command: |
            echo "key=\"fe-platform-demo/port/${TARGET_REPO}.tfstate\"" > terraform/pipeline-terraform/backend.conf
      - terraform/apply:
          backend_config_file: backend.conf
          path: terraform/pipeline-terraform
          var_file: app.tfvars

workflows:
  provision-infrastructure:
    when:
      and:
        - equal: [ webhook, << pipeline.trigger_source >> ]
        - << pipeline.trigger_parameters.webhook.body >>
    jobs:
      - configure-cci:
          context: 
            - centralized-assest-github-envs

commands:
  setup-tf-vars-create:
    steps:
      - run:
          name: Setup app specific variables from Port
          command: |
            export APP_NAME=${TARGET_REPO}
            export TEMPLATE=${TEMPLATE_REPO}
            export ORG_ID=${CIRCLE_ORGANIZATION_ID}
            export ORG_SLUG=${CIRCLECI_ORG_SLUG}
            export DEPLOYER_SECRET='pulledfromvault'
            export TEMPLATE_OWNER=${GITHUB_ORG}
            echo "APP_NAME: $APP_NAME"
            echo "TEMPLATE: $TEMPLATE"
            echo "ORG_ID: $ORG_ID"
            echo "ORG_SLUG: $ORG_SLUG"
            echo "DEPLOYER_SECRET: $DEPLOYER_SECRET"
            echo "TEMPLATE_OWNER: $TEMPLATE_OWNER"
            circleci env subst < .circleci/terraform_provider/app.tfvars > terraform/pipeline-terraform/app.tfvars