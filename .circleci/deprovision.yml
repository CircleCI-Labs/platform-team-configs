version: 2.1

# Define the orbs we'll use for deprovisioning
orbs:
  terraform: circleci/terraform@3.6
  aws-cli: circleci/aws-cli@5.4.0
  platform-team: https://raw.githubusercontent.com/CircleCI-Labs/platform-team-configs/bb27397705191ba9ed53db898122058a781471e1/orbs/platform-team.yml

# Define pipeline parameters for deprovisioning
parameters:
  target_repo:
    type: string
    default: ""  # Must be provided via API
    description: "Name of the repository to destroy"

jobs:
  destroy-cci-and-repo:
    docker:
      - image: cimg/deploy:2025.01.1
    environment:
      TARGET_REPO: << pipeline.parameters.target_repo >>
    steps:
      - checkout
      - platform-team/build-terraform-provider-circleci:
          provider_version: "0.0.1"
      - aws-cli/setup:
          role_arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${AWS_IAM_PREFIX}-role"
          role_session_name: "fe-provider-demo-<< pipeline.number >>"
      - run:
          name: Generate backend config
          command: |
            echo "key=\"fe-platform-demo/port/${TARGET_REPO}.tfstate\"" > terraform/pipeline-terraform/backend.conf
      - terraform/destroy:
          backend_config_file: backend.conf
          path: terraform/pipeline-terraform
          var: application_name=<< pipeline.parameters.target_repo >>

workflows:
  destroy_project:
    when:
      and:
        - equal: [ api, << pipeline.trigger_source >> ]
        - << pipeline.parameters.target_repo >>
    jobs:
      - destroy-cci-and-repo:
          context:
            - centralized-assest-github-envs
