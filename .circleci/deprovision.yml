version: 2.1

# Define the orbs we'll use for deprovisioning
orbs:
  terraform: circleci/terraform@3.6
  aws-cli: circleci/aws-cli@5.4.0
  platform-team: https://raw.githubusercontent.com/CircleCI-Labs/platform-team-configs/refs/heads/main/orbs/platform-team.yml

# Define pipeline parameters for deprovisioning
parameters:
  target_repo:
    type: string
    default: ""  # Must be provided via API
    description: "Name of the repository to destroy"

jobs:
  destroy-cci-and-repo:
    docker:
      - image: cimg/deploy:2025.01.1
    environment:
      TARGET_REPO: << pipeline.parameters.target_repo >>
      # Enable Terraform debug logging
      TF_LOG: TRACE
      TF_LOG_PATH: ./terraform-debug.log
      # Enable provider debug logging
      TF_LOG_PROVIDER: TRACE
    steps:
      - checkout
      - platform-team/build-terraform-provider-circleci:
          provider_version: "0.0.1"
          commit_sha: "92808ad67ed663b767af230bce32c2ba25ead147"
      - aws-cli/setup:
          role_arn: "arn:aws:iam::${AWS_ACCOUNT_ID}:role/${AWS_IAM_PREFIX}-role"
          role_session_name: "fe-provider-demo-<< pipeline.number >>"
      - run:
          name: Generate backend config
          command: |
            echo "key=\"fe-platform-demo/port/${TARGET_REPO}.tfstate\"" > terraform/pipeline-terraform/backend.conf
      - platform-team/setup-tf-vars
      - terraform/destroy:
          backend_config_file: backend.conf
          path: terraform/pipeline-terraform
          var_file: app.tfvars
      - run:
          name: Output debug logs on failure
          command: |
            if [[ -f ./terraform-debug.log ]]; then
              echo "=== TERRAFORM DEBUG LOG ==="
              tail -100 ./terraform-debug.log
            fi
          when: on_fail

workflows:
  destroy_project:
    when:
      and:
        - equal: [ api, << pipeline.trigger_source >> ]
        - << pipeline.parameters.target_repo >>
    jobs:
      - destroy-cci-and-repo:
          context:
            - centralized-asset-github-envs
